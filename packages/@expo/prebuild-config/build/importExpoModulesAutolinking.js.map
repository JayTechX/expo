{"version":3,"file":"importExpoModulesAutolinking.js","names":["importExpoModulesAutolinking","projectRoot","autolinking","tryRequireExpoModulesAutolinking","assertAutolinkingCompatibility","resolvedAutolinkingPath","resolveOptions","paths","require","resolve","Error"],"sources":["../src/importExpoModulesAutolinking.ts"],"sourcesContent":["export type SearchResults = {\n  [moduleName: string]: object;\n};\n\nexport type SearchOptions = {\n  searchPaths: string[];\n  platform: 'ios' | 'android' | 'web';\n  silent?: boolean;\n};\n\ntype AutolinkingModule = typeof import('expo/autolinking');\n\n/**\n * Imports the `expo-modules-autolinking` package installed in the project at the given path.\n */\nexport function importExpoModulesAutolinking(projectRoot: string): AutolinkingModule {\n  const autolinking = tryRequireExpoModulesAutolinking(projectRoot);\n  assertAutolinkingCompatibility(autolinking);\n  return autolinking;\n}\n\nfunction tryRequireExpoModulesAutolinking(projectRoot: string): AutolinkingModule {\n  let resolvedAutolinkingPath;\n  const resolveOptions = { paths: [projectRoot] };\n\n  try {\n    // Autolinking is exported from the `expo` package as of SDK 52\n    resolvedAutolinkingPath = require.resolve('expo/autolinking', resolveOptions);\n  } catch {\n    // Fallback to require from `expo-modules-autolinking` on SDK 50 and 51\n    try {\n      resolvedAutolinkingPath = require.resolve('expo-modules-autolinking/exports', resolveOptions);\n    } catch {}\n  }\n\n  if (!resolvedAutolinkingPath) {\n    throw new Error(\n      \"Cannot find 'expo-modules-autolinking' package in your project, make sure that you have 'expo' package installed\"\n    );\n  }\n  return require(resolvedAutolinkingPath);\n}\n\nfunction assertAutolinkingCompatibility(autolinking: AutolinkingModule): void {\n  if ('resolveSearchPathsAsync' in autolinking && 'findModulesAsync' in autolinking) {\n    return;\n  }\n  throw new Error(\n    \"The 'expo-modules-autolinking' package has been found, but it seems to be incompatible with '@expo/prebuild-config'\"\n  );\n}\n"],"mappings":";;;;;;AAYA;AACA;AACA;AACO,SAASA,4BAA4BA,CAACC,WAAmB,EAAqB;EACnF,MAAMC,WAAW,GAAGC,gCAAgC,CAACF,WAAW,CAAC;EACjEG,8BAA8B,CAACF,WAAW,CAAC;EAC3C,OAAOA,WAAW;AACpB;AAEA,SAASC,gCAAgCA,CAACF,WAAmB,EAAqB;EAChF,IAAII,uBAAuB;EAC3B,MAAMC,cAAc,GAAG;IAAEC,KAAK,EAAE,CAACN,WAAW;EAAE,CAAC;EAE/C,IAAI;IACF;IACAI,uBAAuB,GAAGG,OAAO,CAACC,OAAO,CAAC,kBAAkB,EAAEH,cAAc,CAAC;EAC/E,CAAC,CAAC,MAAM;IACN;IACA,IAAI;MACFD,uBAAuB,GAAGG,OAAO,CAACC,OAAO,CAAC,kCAAkC,EAAEH,cAAc,CAAC;IAC/F,CAAC,CAAC,MAAM,CAAC;EACX;EAEA,IAAI,CAACD,uBAAuB,EAAE;IAC5B,MAAM,IAAIK,KAAK,CACb,kHACF,CAAC;EACH;EACA,OAAOF,OAAO,CAACH,uBAAuB,CAAC;AACzC;AAEA,SAASD,8BAA8BA,CAACF,WAA8B,EAAQ;EAC5E,IAAI,yBAAyB,IAAIA,WAAW,IAAI,kBAAkB,IAAIA,WAAW,EAAE;IACjF;EACF;EACA,MAAM,IAAIQ,KAAK,CACb,qHACF,CAAC;AACH","ignoreList":[]}